{"ast":null,"code":"var _jsxFileName = \"/home/mitesh.sathvara/Project/upskill-fest/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../../App.css\";\nimport PropTypes from \"prop-types\";\nimport { BrowserRouter as Router, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  console.log(\"bosy----------\", credentials);\n  return fetch(\"http://localhost:3002/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(credentials)\n  }).then(response => response.json()).then(data => {\n    return data;\n  });\n}\n\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await loginUser({\n      username,\n      password\n    });\n\n    if (response) {\n      alert(response.message);\n      console.log(\"resoi[jse\", response);\n      setToken(response.token);\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"vh-100 login-style\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mitesh.sathvara/Project/upskill-fest/src/components/Login/Login.js"],"names":["React","useState","PropTypes","BrowserRouter","Router","Navigate","loginUser","credentials","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","Login","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","alert","message","token","target","value","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,QAFF,QAGO,kBAHP;;;AAKA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,WAA9B;AACA,SAAOG,KAAK,CAAC,6BAAD,EAAgC;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFiC;AAG1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,WAAf;AAHoC,GAAhC,CAAL,CAKJS,IALI,CAKEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALf,EAMJF,IANI,CAMEG,IAAD,IAAU;AACd,WAAOA,IAAP;AACD,GARI,CAAP;AASD;;AAED,eAAe,SAASC,KAAT,OAA6B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,EAAxC;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,EAAxC;;AAEA,QAAMyB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMX,QAAQ,GAAG,MAAMX,SAAS,CAAC;AAC/BgB,MAAAA,QAD+B;AAE/BE,MAAAA;AAF+B,KAAD,CAAhC;;AAIA,QAAIP,QAAJ,EAAc;AACZY,MAAAA,KAAK,CAACZ,QAAQ,CAACa,OAAV,CAAL;AACAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBQ,QAAzB;AACAI,MAAAA,QAAQ,CAACJ,QAAQ,CAACc,KAAV,CAAR;AACA,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAZD;;AAcA,sBACE;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAEL,YAAhB;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGC,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,QAAQ,EAAGN,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV;AAF9B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAYE;AAAA,iCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAzCuBb,K;;KAAAA,K;AA2CxBA,KAAK,CAACc,SAAN,GAAkB;AAChBb,EAAAA,QAAQ,EAAEnB,SAAS,CAACiC,IAAV,CAAeC;AADT,CAAlB","sourcesContent":["import React, { useState } from \"react\";\nimport \"../../App.css\";\nimport PropTypes from \"prop-types\";\nimport {\n  BrowserRouter as Router,\n  Navigate,\n} from \"react-router-dom\";\n\nasync function loginUser(credentials) {\n  console.log(\"bosy----------\", credentials);\n  return fetch(\"http://localhost:3002/login\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(credentials),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n    });\n}\n\nexport default function Login({ setToken }) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await loginUser({\n      username,\n      password,\n    });\n    if (response) {\n      alert(response.message);\n      console.log(\"resoi[jse\", response);\n      setToken(response.token);\n      return <Navigate to=\"/dashboard\" />;\n    }\n  };\n\n  return (\n    <section className=\"vh-100 login-style\">\n      <div className=\"login-wrapper\">\n        <h1>Please Log In</h1>\n        <form onSubmit={handleSubmit}>\n          <label>\n            <p>Username</p>\n            <input type=\"text\" onChange={(e) => setUserName(e.target.value)} />\n          </label>\n          <label>\n            <p>Password</p>\n            <input\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </label>\n          <div>\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}