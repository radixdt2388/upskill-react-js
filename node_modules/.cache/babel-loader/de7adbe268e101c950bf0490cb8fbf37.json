{"ast":null,"code":"var _jsxFileName = \"/home/mitesh.sathvara/Project/upskill-fest/src/components/Login/Login.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../../App.css\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  _s();\n\n  console.log(\"bosy----------\", credentials);\n  useEffect(() => {\n    return fetch(\"http://localhost:3002/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(data => data.json()).then(result => {\n      console.log(\"result\", result);\n    });\n  });\n}\n\n_s(loginUser, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default function Login(_ref) {\n  _s2();\n\n  let {\n    setToken\n  } = _ref;\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    // e.preventDefault();\n    console.log(\"username------------\", username, password);\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"vh-100 login-style\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Login, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mitesh.sathvara/Project/upskill-fest/src/components/Login/Login.js"],"names":["React","useState","PropTypes","loginUser","credentials","console","log","useEffect","fetch","method","headers","body","JSON","stringify","then","data","json","result","Login","setToken","username","setUserName","password","setPassword","handleSubmit","e","token","target","value","propTypes","func","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AAAA;;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,WAA9B;AACAG,EAAAA,SAAS,CAAC,MAAM;AACd,WAAOC,KAAK,CAAC,6BAAD,EAAgC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,WAAf;AALoC,KAAhC,CAAL,CAOJU,IAPI,CAOEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAPX,EAQJF,IARI,CAQEG,MAAD,IAAY;AAChBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBW,MAAtB;AACD,KAVI,CAAP;AAWD,GAZQ,CAAT;AAaD;;GAfcd,S;;AAiBf,eAAe,SAASe,KAAT,OAA6B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,EAAxC;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,EAAxC;;AAEA,QAAMuB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChC;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCc,QAApC,EAA8CE,QAA9C;AACA,UAAMI,KAAK,GAAG,MAAMvB,SAAS,CAAC;AAC5BiB,MAAAA,QAD4B;AAE5BE,MAAAA;AAF4B,KAAD,CAA7B;AAIAH,IAAAA,QAAQ,CAACO,KAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAEF,YAAhB;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGC,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,QAAQ,EAAGH,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV;AAF9B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAYE;AAAA,iCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;IArCuBV,K;;KAAAA,K;AAuCxBA,KAAK,CAACW,SAAN,GAAkB;AAChBV,EAAAA,QAAQ,EAAEjB,SAAS,CAAC4B,IAAV,CAAeC;AADT,CAAlB","sourcesContent":["import React, { useState } from \"react\";\nimport \"../../App.css\";\nimport PropTypes from \"prop-types\";\n\nasync function loginUser(credentials) {\n  console.log(\"bosy----------\", credentials);\n  useEffect(() => {\n    return fetch(\"http://localhost:3002/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then((data) => data.json())\n      .then((result) => {\n        console.log(\"result\", result);\n      });\n  });\n}\n\nexport default function Login({ setToken }) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async (e) => {\n    // e.preventDefault();\n    console.log(\"username------------\", username, password);\n    const token = await loginUser({\n      username,\n      password,\n    });\n    setToken(token);\n  };\n\n  return (\n    <section className=\"vh-100 login-style\">\n      <div className=\"login-wrapper\">\n        <h1>Please Log In</h1>\n        <form onSubmit={handleSubmit}>\n          <label>\n            <p>Username</p>\n            <input type=\"text\" onChange={(e) => setUserName(e.target.value)} />\n          </label>\n          <label>\n            <p>Password</p>\n            <input\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </label>\n          <div>\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}