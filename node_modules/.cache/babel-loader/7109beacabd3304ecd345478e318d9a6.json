{"ast":null,"code":"var _jsxFileName = \"/home/mitesh.sathvara/Project/upskill-fest/src/components/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport UserData from \"../userData\";\nimport Pagination from \"./pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PageSize = 10;\n\nfunction Dashboard() {\n  _s();\n\n  const [users, setUsers] = useState(UserData);\n  const [name, setName] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [search, setNewSearch] = useState(\"\");\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return users.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage]);\n\n  const handleSearchChange = e => {\n    setNewSearch(e.target.value);\n  };\n\n  const filtered = !search ? users : users.filter(user => user.name.toLowerCase().includes(search.toLowerCase())); // const filter = (e) => {\n  //   const keyword = e.target.value;\n  //   if (keyword !== \"\") {\n  //     const results = users.filter((user) => {\n  //       return user.name.toLowerCase().startsWith(keyword.toLowerCase());\n  //       // Use the toLowerCase() method to make it case-insensitive\n  //     });\n  //     setCurrentPage(results);\n  //   } else {\n  //     setCurrentPage(users);\n  //     // If the text field is empty, show all users\n  //   }\n  //   setName(keyword);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: search,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"p-3 text-center\",\n      children: \"React - Display a list of items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filtered.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"pagination-bar\",\n        currentPage: currentPage,\n        totalCount: users.length,\n        pageSize: PageSize,\n        onPageChange: page => setCurrentPage(page)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"jdMvWDRLl20+IhZfPpuS7l+V5k4=\");\n\n_c = Dashboard;\nexport default Dashboard; // export default function Dashboard() {\n//   const Users = UserDetail(UserList, UserData);\n//   return (\n//     <div>\n//       <Users></Users>\n//       <div className=\"grid-container\">\n//         <CustomeHook></CustomeHook>\n//       </div>\n//       CountApp\n//     </div>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/mitesh.sathvara/Project/upskill-fest/src/components/Dashboard/Dashboard.js"],"names":["React","useState","useMemo","UserData","Pagination","PageSize","Dashboard","users","setUsers","name","setName","currentPage","setCurrentPage","search","setNewSearch","currentTableData","firstPageIndex","lastPageIndex","slice","handleSearchChange","e","target","value","filtered","filter","user","toLowerCase","includes","map","email","role","id","length","page"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport UserData from \"../userData\";\nimport Pagination from \"./pagination\";\nlet PageSize = 10;\n\nfunction Dashboard() {\n  const [users, setUsers] = useState(UserData);\n  const [name, setName] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [search, setNewSearch] = useState(\"\");\n\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return users.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage]);\n\n  const handleSearchChange = (e) => {\n    setNewSearch(e.target.value);\n  };\n\n  const filtered = !search\n    ? users\n    : users.filter((user) =>\n        user.name.toLowerCase().includes(search.toLowerCase())\n      );\n\n  // const filter = (e) => {\n  //   const keyword = e.target.value;\n\n  //   if (keyword !== \"\") {\n  //     const results = users.filter((user) => {\n  //       return user.name.toLowerCase().startsWith(keyword.toLowerCase());\n  //       // Use the toLowerCase() method to make it case-insensitive\n  //     });\n  //     setCurrentPage(results);\n  //   } else {\n  //     setCurrentPage(users);\n  //     // If the text field is empty, show all users\n  //   }\n\n  //   setName(keyword);\n  // };\n\n  return (\n    <div className=\"container\">\n      <input type=\"text\" value={search} onChange={handleSearchChange} />\n      <h3 className=\"p-3 text-center\">React - Display a list of items</h3>\n      <table className=\"table table-striped table-bordered\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Role</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filtered.map((user) => (\n            <tr key={user.id}>\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n              <td>{user.role}</td>\n            </tr>\n          ))}\n        </tbody>\n        <Pagination\n          className=\"pagination-bar\"\n          currentPage={currentPage}\n          totalCount={users.length}\n          pageSize={PageSize}\n          onPageChange={(page) => setCurrentPage(page)}\n        />\n      </table>\n    </div>\n  );\n}\n\nexport default Dashboard;\n\n// export default function Dashboard() {\n//   const Users = UserDetail(UserList, UserData);\n//   return (\n//     <div>\n//       <Users></Users>\n//       <div className=\"grid-container\">\n//         <CustomeHook></CustomeHook>\n//       </div>\n//       CountApp\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}