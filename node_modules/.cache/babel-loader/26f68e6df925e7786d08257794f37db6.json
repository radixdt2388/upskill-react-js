{"ast":null,"code":"var _jsxFileName = \"/home/mitesh.sathvara/Project/upskill-fest/src/components/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport UserData from \"../userData\";\nimport Pagination from \"./pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PageSize = 10;\n\nfunction Dashboard() {\n  _s();\n\n  const [users, setUsers] = useState(UserData);\n  const [currentPage, setCurrentPage] = useState(1); // const [foundUsers, setFoundUsers] = useState(UserData);\n\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return users.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage]);\n\n  const filter = e => {\n    const keyword = e.target.value;\n\n    if (keyword !== \"\") {\n      const results = users.filter(user => {\n        return user.name.toLowerCase().startsWith(keyword.toLowerCase()); // Use the toLowerCase() method to make it case-insensitive\n      });\n      setUsers(results);\n    } else {\n      setUsers(users); // If the text field is empty, show all users\n    }\n\n    setName(keyword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"p-3 text-center\",\n      children: \"React - Display a list of items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentTableData.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"pagination-bar\",\n        currentPage: currentPage,\n        totalCount: users.length,\n        pageSize: PageSize,\n        onPageChange: page => setCurrentPage(page)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"cr+aeFmoKuX4gyKIS7bgidW8Vyk=\");\n\n_c = Dashboard;\nexport default Dashboard; // export default function Dashboard() {\n//   const Users = UserDetail(UserList, UserData);\n//   return (\n//     <div>\n//       <Users></Users>\n//       <div className=\"grid-container\">\n//         <CustomeHook></CustomeHook>\n//       </div>\n//       CountApp\n//     </div>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/mitesh.sathvara/Project/upskill-fest/src/components/Dashboard/Dashboard.js"],"names":["React","useState","useMemo","UserData","Pagination","PageSize","Dashboard","users","setUsers","currentPage","setCurrentPage","currentTableData","firstPageIndex","lastPageIndex","slice","filter","e","keyword","target","value","results","user","name","toLowerCase","startsWith","setName","map","email","role","id","length","page"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AACA,IAAIC,QAAQ,GAAG,EAAf;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACE,QAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C,CAFmB,CAGnB;;AAEA,QAAMU,gBAAgB,GAAGT,OAAO,CAAC,MAAM;AACrC,UAAMU,cAAc,GAAG,CAACH,WAAW,GAAG,CAAf,IAAoBJ,QAA3C;AACA,UAAMQ,aAAa,GAAGD,cAAc,GAAGP,QAAvC;AACA,WAAOE,KAAK,CAACO,KAAN,CAAYF,cAAZ,EAA4BC,aAA5B,CAAP;AACD,GAJ+B,EAI7B,CAACJ,WAAD,CAJ6B,CAAhC;;AAMA,QAAMM,MAAM,GAAIC,CAAD,IAAO;AACpB,UAAMC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAzB;;AAEA,QAAIF,OAAO,KAAK,EAAhB,EAAoB;AAClB,YAAMG,OAAO,GAAGb,KAAK,CAACQ,MAAN,CAAcM,IAAD,IAAU;AACrC,eAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,UAAxB,CAAmCP,OAAO,CAACM,WAAR,EAAnC,CAAP,CADqC,CAErC;AACD,OAHe,CAAhB;AAIAf,MAAAA,QAAQ,CAACY,OAAD,CAAR;AACD,KAND,MAMO;AACLZ,MAAAA,QAAQ,CAACD,KAAD,CAAR,CADK,CAEL;AACD;;AAEDkB,IAAAA,OAAO,CAACR,OAAD,CAAP;AACD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,oCAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBACGN,gBAAgB,CAACe,GAAjB,CAAsBL,IAAD,iBACpB;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,IAAI,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKN,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASP,IAAI,CAACQ,EAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cARF,eAiBE,QAAC,UAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,WAAW,EAAEpB,WAFf;AAGE,QAAA,UAAU,EAAEF,KAAK,CAACuB,MAHpB;AAIE,QAAA,QAAQ,EAAEzB,QAJZ;AAKE,QAAA,YAAY,EAAG0B,IAAD,IAAUrB,cAAc,CAACqB,IAAD;AALxC;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA1DQzB,S;;KAAAA,S;AA4DT,eAAeA,SAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport UserData from \"../userData\";\nimport Pagination from \"./pagination\";\nlet PageSize = 10;\n\nfunction Dashboard() {\n  const [users, setUsers] = useState(UserData);\n  const [currentPage, setCurrentPage] = useState(1);\n  // const [foundUsers, setFoundUsers] = useState(UserData);\n\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return users.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage]);\n\n  const filter = (e) => {\n    const keyword = e.target.value;\n\n    if (keyword !== \"\") {\n      const results = users.filter((user) => {\n        return user.name.toLowerCase().startsWith(keyword.toLowerCase());\n        // Use the toLowerCase() method to make it case-insensitive\n      });\n      setUsers(results);\n    } else {\n      setUsers(users);\n      // If the text field is empty, show all users\n    }\n\n    setName(keyword);\n  };\n\n  return (\n    <div className=\"container\">\n      <h3 className=\"p-3 text-center\">React - Display a list of items</h3>\n      <table className=\"table table-striped table-bordered\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Role</th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentTableData.map((user) => (\n            <tr key={user.id}>\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n              <td>{user.role}</td>\n            </tr>\n          ))}\n        </tbody>\n        <Pagination\n          className=\"pagination-bar\"\n          currentPage={currentPage}\n          totalCount={users.length}\n          pageSize={PageSize}\n          onPageChange={(page) => setCurrentPage(page)}\n        />\n      </table>\n    </div>\n  );\n}\n\nexport default Dashboard;\n\n// export default function Dashboard() {\n//   const Users = UserDetail(UserList, UserData);\n//   return (\n//     <div>\n//       <Users></Users>\n//       <div className=\"grid-container\">\n//         <CustomeHook></CustomeHook>\n//       </div>\n//       CountApp\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}